swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

tags:
  - name: User Module
    description: Authentication and user profile management
  - name: Transactions
    description: Transactions management

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update user profile
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Transactions
      description: API for fetching an account's transactions
      parameters:
        - name: month
          in: query
          description: Month in YYYY-MM format
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: List of transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupedTransactions'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Transaction details
      description: API for fetching an account transaction's details
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: Transaction ID
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update transaction fields
      description: API to update transaction fields like note or category
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTransactionRequest'
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid fields
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized

definitions:
  User:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: User email address
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public username

  Login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: User email address
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: integer
        description: Status code of the response
      message:
        type: string
        description: Description of the response status
      body:
        type: object
        properties:
          id:
            type: string
            description: User identifier
          email:
            type: string
            description: User email address

  LoginResponse:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        description: JWT authentication token

  UserProfile:
    type: object
    properties:
      userName:
        type: string
        description: Public username of the user

  GroupedTransactions:
    type: object
    properties:
      accountId:
        type: string
        description: Account identifier
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionDetails'

  TransactionDetails:
    type: object
    properties:
      id:
        type: string
        description: Transaction identifier
      date:
        type: string
        format: date
        description: Transaction date
      description:
        type: string
        description: Transaction description
      amount:
        type: number
        format: float
        description: Transaction amount
      balance:
        type: number
        format: float
        description: Account balance after the transaction
      transactionType:
        type: string
        description: Transaction type
      category:
        type: string
        description: Custom category
      note:
        type: string
        description: Custom note left by the user

  UpdateTransactionRequest:
    type: object
    properties:
      category:
        type: string
        description: New custom category
      note:
        type: string
        description: New custom note
